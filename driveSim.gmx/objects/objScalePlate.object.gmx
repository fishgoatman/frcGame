<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBluePlate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///creation stuff
middleId = x;

if (instance_exists(middleId)) {
    x = middleId.x;
    smallSide = middleId.tempSide;
    var xOffset = sprite_width / 4;
    var yOffset = sprite_height / 3;
    startX = x - sprite_width / 2 + xOffset;
    endX = x + sprite_width / 2 - xOffset;
    startY = y - sprite_width / 2 + yOffset;
    endY = y + sprite_width / 2 - yOffset;
    image_speed = 0;
    lastThisCubes = 0;
    depth = -1;
    
    if (smallSide == "r") {
        sprite_index = sprRedPlate;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///points for adding cubes
if (instance_exists(middleId)) {
    if (smallSide == "r") {
        var cubeList = scrInstancePlaceList(x, y, objPowerCube);
        middleId.redCubes = ds_list_size(cubeList);
        thisCubes = middleId.redCubes;
        otherCubes = middleId.blueCubes;
        redScore += thisCubes - lastThisCubes;
    } else if (smallSide == "b") {
        var cubeList = scrInstancePlaceList(x, y, objPowerCube);
        middleId.blueCubes = ds_list_size(cubeList);
        thisCubes = middleId.blueCubes;
        otherCubes = middleId.redCubes;
        blueScore += thisCubes - lastThisCubes;
    }
    
    //image_index = (image_number - 1) / 2 + thisCubes - otherCubes;
    lastThisCubes = thisCubes;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///image_index
var thisPowerupEffect = powerupEffects[1];
var thisType = thisPowerupEffect.type;
var thisSide = thisPowerupEffect.side;

if (thisType != 255) {
    //index
    if (thisType == 0) {
        if (thisSide == smallSide) {
            image_index = forceII;
        }
    } else if (thisType == 1) {
        if (image_index &lt; boostIIStart || image_index &gt; boostIIEnd) {
            image_index = boostIIStart;
        }
    }
} else {
    image_index = noneII;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
