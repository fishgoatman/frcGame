<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///creation stuff
robotPuppet = instance_create(x, y, objRobotPuppet);
gap = 3;
robotSize = 64;
obj[0] = objKeyboardLeft;
obj[1] = objKeyboardRight;
obj[2] = objMouse;
sprSelected[0] = sprKeyboardLeftSelected;
sprSelected[1] = sprKeyboardRightSelected;
sprSelected[2] = sprMouseSelected;
sprNotSelected[0] = sprKeyboardLeft;
sprNotSelected[1] = sprKeyboardRight;
sprNotSelected[2] = sprMouse;
iconSize = scrGetWidth(objKeyboardLeft);
clicked = "none";
sideId = noone;
display = "none";
sideIdNum = -1;

for (var i = 0; i &lt; numOptions; i++) {
    menu[i] = noone;
}

if (x &lt; room_width / 2) {
    robotPuppet.sprite_index = sprRedRobot;
    robotPuppet.image_angle = 0;
    posNeg = -1;
    imageIndex = 0;
} else {
    robotPuppet.sprite_index = sprBlueRobot;
    robotPuppet.image_angle = 180;
    posNeg = 1;
    imageIndex = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///actions
if (mouse_check_button_pressed(mb_left)) {
    var a = instance_create(mouse_x, mouse_y, objPixel);
    
    with (a) {
        var collisionId = instance_place(x, y, objRobotPuppet);
    
        if (collisionId == other.robotPuppet) {
            other.clicked = "here";
        } else {
            other.clicked = "elsewhere";
        }
        
        collisionId = instance_place(x, y, objChoice);
        
        for (var i = 0; i &lt; numOptions; i++) {
            if (other.menu[i] != noone &amp;&amp; collisionId == other.menu[i]) {
                other.clicked = "icon";
                other.clickedNum = i;
            }
        }
        
        instance_destroy();
    }
} else {
    clicked = "none";
}

if (clicked == "here") {
    if (display == "menu") {
        display = "none";
    } else {
        display = "menu";
    }
}

if (clicked == "icon") {
    for (var i = 0; i &lt; numOptions; i++) {
        if (i == clickedNum) {
            objRobotSelect.controlSchemeIds[clickedNum] = id;
        } else if (objRobotSelect.controlSchemeIds[i] == id) {
            objRobotSelect.controlSchemeIds[i] = noone;
        }
    }
}

if (clicked == "elsewhere") {
    display = "none";
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sprite and image
if (display == "menu") {
    for (var i = 0; i &lt; numOptions; i++) {
        if (menu[i] == noone) {
            menu[i] = instance_create(x + posNeg * (robotSize / 2 + iconSize / 2 + gap), y + (i - 1) * gap + (i - 1) * iconSize, obj[i]);
            menu[i].image_index = imageIndex;
        }
        
        if (objRobotSelect.controlSchemeIds[i] == id) {
            menu[i].sprite_index = sprSelected[i];
        } else {
            menu[i].sprite_index = sprNotSelected[i];
        }
    }
} else {
    for (var i = 0; i &lt; numOptions; i++) {
        if (menu[i] != noone) {
            with (menu[i]) {
                instance_destroy();
            }
            
            menu[i] = noone;
        }
    }
}

if (display == "none") {
    for (var i = 0; i &lt; numOptions; i++) {
        if (objRobotSelect.controlSchemeIds[i] == id) {
            if (sideId == noone) {
                sideId = instance_create(x + posNeg * (robotSize / 2 + iconSize / 2 + gap), y, obj[i]);
                sideIdNum = i;
                sideId.sprite_index = sprSelected[i];
                sideId.image_index = imageIndex;
            }
        } else if (i == sideIdNum &amp;&amp; sideId != noone) {
            with (sideId) {
                instance_destroy();
            }
            
            sideId = noone;
            sideIdNum = -1;
        }
    }
} else {
    if (sideId != noone) {
        with (sideId) {
            instance_destroy();
        }
        
        sideId = noone;
        sideIdNum = -1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
