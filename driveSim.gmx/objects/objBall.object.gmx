<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hv=10;
vv=7;
image_xscale*=0.25;
image_yscale*=0.25;
mass=5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if(place_meeting(x,y,objBlock)){
    inst=instance_place(x,y,objBlock);
    radiusAngle=darctan2(y-inst.y,inst.x-x);
    if(radiusAngle&lt;0){
        radiusAngle+=360;
    }
   
    
    velocityAngle=darctan2(vv,hv);
    if(velocityAngle&lt;0){
        velocityAngle+=360;
    }
  
    magVelocity=sqrt(hv*hv+vv*vv);
    mAngle=radiusAngle-velocityAngle;
    resultingAngle=velocityAngle+180+2*mAngle;
    
    hv=dcos(resultingAngle)*magVelocity;
    vv=dsin(resultingAngle)*magVelocity; 
    x+=hv;
    y-=vv;
}

if(place_meeting(x,y,objBall)){
    bInst=instance_place(x,y,objBall);
 
    if(id&gt;bInst){
        initialHMomentum=hv+bInst.hv;
        initialVMomentum=vv+bInst.vv;

        magVelocity=sqrt(hv*hv+vv*vv);
        bMagVelocity=sqrt(bInst.hv*bInst.hv+bInst.vv*bInst.vv);
        radiusAngle=darctan2(y-bInst.y,bInst.x-x);
        if(radiusAngle&lt;0){
            radiusAngle+=360;
        }
        
        velocityAngle=darctan2(vv,hv);
        if(velocityAngle&lt;0){
            velocityAngle+=360;
        }
        mAngle=radiusAngle-velocityAngle;
        resultingAngle=velocityAngle+180+2*mAngle;
        
        hv=dcos(resultingAngle)*bMagVelocity;
        vv=dsin(resultingAngle)*bMagVelocity;
        bInst.hv=(initialHMomentum-hv)/2;
        bInst.vv=(initialVMomentum-vv)/2;
        
    }
} 
    scrBallMove(hv,vv);


if((x-sprite_width/2)&lt;0||(x+sprite_width/2)&gt;room_width){
    hv=-hv;

}if((y-sprite_height/2)&lt;0||(y+sprite_height/2)&gt;room_height){
    vv=-vv;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
